[tox]
# whitelisting below: no warning with tox --sitepackages (docker cache)
# --no-binary below: install buildbot from source to obtain test modules

[testenv]
basepython = python2.7
deps = -r{toxinidir}/requirements/base.txt

[testenv:autoformat]
envdir =
  {toxworkdir}/autoformat
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/autoformat.txt
commands =
  isort -rc --atomic src tests
  autopep8 -ir src tests

[testenv:flake8]
envdir =
  {toxworkdir}/flake8
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/flake8.txt
whitelist_externals =
  flake8
commands =
  flake8 --config {toxinidir}/.flake8 \
         {posargs:{toxinidir}/src \
         {toxinidir}/src/eve/etc/master.cfg \
         {toxinidir}/tests}

[testenv:prospector]
envdir =
  {toxworkdir}/prospector
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/prospector.txt
whitelist_externals =
  prospector
commands =
  prospector {posargs:-F}

[testenv:pylint]
envdir =
  {toxworkdir}/pylint
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/pylint.txt
  -r{toxinidir}/requirements/system_tests.txt
install_command =
  pip install --no-binary buildbot {opts} {packages}
whitelist_externals =
  pylint
commands =
  pylint --rcfile {toxinidir}/.pylintrc \
         {posargs:{toxinidir}/src \
         {toxinidir}/src/eve/etc/master.cfg \
         {toxinidir}/tests}

[testenv:lint]
envdir =
  {toxworkdir}/lint
deps =
  {[testenv:flake8]deps}
  {[testenv:prospector]deps}
  {[testenv:pylint]deps}
install_command =
  pip install --no-binary buildbot {opts} {packages}
whitelist_externals =
  {[testenv:flake8]whitelist_externals}
  {[testenv:prospector]whitelist_externals}
  {[testenv:pylint]whitelist_externals}
commands =
  {[testenv:flake8]commands}
  {[testenv:prospector]commands}
  {[testenv:pylint]commands}

[testenv:unit]
envdir =
  {toxworkdir}/unit
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/unit.txt
install_command =
  pip install --no-binary buildbot {opts} {packages}
setenv =
  PYTHONPATH = {toxinidir}:{envsitepackagesdir}
whitelist_externals =
  trial
commands =
  trial --temp-directory={toxworkdir}/unit/tmp/_trial_tmp {posargs:tests/unit}

[testenv:system]
envdir =
  {toxworkdir}/system
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/system_tests.txt
setenv =
  WORKDIR={envtmpdir}
commands =
  py.test {posargs} -svx {toxinidir}/tests/system

[testenv:up]
envdir =
  {toxworkdir}/up
deps =
  -r{toxinidir}/requirements/compose.txt
commands =
  docker-compose up
