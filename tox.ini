[tox]
# whitelisting below: no warning with tox --sitepackages (docker cache)
# --no-binary below: install buildbot from source to obtain test modules

[testenv]
basepython = python2.7
deps = -r{toxinidir}/requirements/base.txt

[testenv:autoformat]
envdir =
  {toxworkdir}/autoformat
deps =
  {[testenv]deps}
  {[testenv:unit]deps}
  -r{toxinidir}/requirements/autoformat.txt
commands =
  isort -vb -rc --atomic eve tests
  autoflake --remove-all-unused-imports --remove-unused-variables --recursive --in-place tests
  yapf --recursive --in-place tests

[testenv:autoformatcheck]
envdir =
  {toxworkdir}/autoformat
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/autoformat.txt
whitelist_externals =
  bash
commands =
  isort -vb -rc --check-only eve tests
  bash -c "[[ $(yapf --recursive -d tests  | wc -c) -eq 0 ]]"

[testenv:flake8]
envdir =
  {toxworkdir}/flake8
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/flake8.txt
whitelist_externals =
  flake8
commands =
  flake8 --config {toxinidir}/.flake8 \
         {posargs:{toxinidir}/eve \
         {toxinidir}/eve/etc/master.cfg \
         {toxinidir}/tests}

[testenv:prospector]
envdir =
  {toxworkdir}/prospector
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/prospector.txt
whitelist_externals =
  prospector
commands =
  prospector {posargs:--full-pep8}

[testenv:pylint]
envdir =
  {toxworkdir}/pylint
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/pylint.txt
  -r{toxinidir}/requirements/system_tests.txt
install_command =
  pip install --no-binary buildbot {opts} {packages}
whitelist_externals =
  pylint
commands =
  pylint  --errors-only --rcfile {toxinidir}/.pylintrc \
         {posargs:{toxinidir}/eve \
         {toxinidir}/eve/etc/master.cfg \
         {toxinidir}/tests}

[testenv:lint]
envdir =
  {toxworkdir}/lint
deps =
  {[testenv:autoformatcheck]deps}
  {[testenv:flake8]deps}
  {[testenv:pylint]deps}
  {[testenv:prospector]deps}
  {[testenv:unit]deps}

install_command =
  pip install --no-binary buildbot {opts} {packages}
whitelist_externals =
  {[testenv:autoformatcheck]whitelist_externals}
  {[testenv:flake8]whitelist_externals}
  {[testenv:pylint]whitelist_externals}
  {[testenv:prospector]whitelist_externals}
commands =
  {[testenv:autoformatcheck]commands}
  {[testenv:flake8]commands}
  {[testenv:pylint]commands}
  {[testenv:prospector]commands}

[testenv:unit]
envdir =
  {toxworkdir}/unit
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/unit.txt
install_command =
  pip install --no-binary buildbot {opts} {packages}
setenv =
  PYTHONPATH = {envsitepackagesdir}:{toxinidir}
commands =
  py.test --cov=tests.unit --cov=eve --cov-fail-under 3 --cov-report html:.htmlcov/unit {posargs} {toxinidir}/tests/unit

[testenv:testutil]
envdir =
  {toxworkdir}/testutil
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/system_tests.txt
setenv =
  WORKDIR={envtmpdir}
commands =
  py.test --cov=tests.util --cov-fail-under 58 --cov-report html:.htmlcov/util {posargs} {toxinidir}/tests/util

[testenv:system]
envdir =
  {toxworkdir}/system
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/system_tests.txt
setenv =
  WORKDIR={envtmpdir}
commands =
  py.test --cov=tests.system --cov=eve --cov-fail-under 59 --cov-config tests/system/.coveragerc --cov-report html:.htmlcov/system {posargs} {toxinidir}/tests/system

[testenv:docker]
envdir =
  {toxworkdir}/docker
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/system_tests.txt
setenv =
  WORKDIR={envtmpdir}
commands =
  py.test --cov=tests.docker --cov-fail-under 85 --cov-report html:.htmlcov/docker {posargs} {toxinidir}/tests/docker

[testenv:up]
envdir =
  {toxworkdir}/up
deps =
  -r{toxinidir}/requirements/compose.txt
commands =
  docker-compose up

[testenv:freeze-requirements]
envdir =
  {toxworkdir}/freeze-requirements
deps =
  {[testenv]deps}
  {[testenv:unit]deps}
  buildbot-pkg==0.9.5
  freeze-requirements==0.5.1
commands =
  {toxinidir}/requirements/update.sh requirements
  freeze-requirements freeze -m build/workers/trusty/requirements.txt build/workers/trusty/requirements.in