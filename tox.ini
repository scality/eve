[tox]
# whitelisting below: no warning with tox --sitepackages (docker cache)
# --no-binary below: install buildbot from source to obtain test modules

[testenv]
basepython = python2.7
deps = -r{toxinidir}/requirements/base.txt

[testenv:autoformat]
envdir =
  {toxworkdir}/autoformat
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/autoformat.txt
commands =
  isort -rc --atomic src tests
  autopep8 -ir src tests

[testenv:flake8]
envdir =
  {toxworkdir}/flake8
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/flake8.txt
whitelist_externals =
  flake8
commands =
  flake8 --config {toxinidir}/.flake8 \
         {posargs:{toxinidir}/src \
         {toxinidir}/src/eve/etc/master.cfg \
         {toxinidir}/tests}

[testenv:prospector]
envdir =
  {toxworkdir}/prospector
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/prospector.txt
whitelist_externals =
  prospector
commands =
  prospector {posargs:-F}

[testenv:pylint]
envdir =
  {toxworkdir}/pylint
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/pylint.txt
install_command =
  pip install --no-binary buildbot {opts} {packages}
whitelist_externals =
  pylint
commands =
  pylint --rcfile {toxinidir}/.pylintrc \
         {posargs:{toxinidir}/src \
         {toxinidir}/src/eve/etc/master.cfg \
         {toxinidir}/tests}

[testenv:lint]
envdir =
  {toxworkdir}/lint
deps =
  {[testenv:flake8]deps}
  {[testenv:prospector]deps}
  {[testenv:pylint]deps}
install_command =
  pip install --no-binary buildbot {opts} {packages}
whitelist_externals =
  {[testenv:flake8]whitelist_externals}
  {[testenv:prospector]whitelist_externals}
  {[testenv:pylint]whitelist_externals}
commands =
  {[testenv:flake8]commands}
  {[testenv:prospector]commands}
  {[testenv:pylint]commands}

[testenv:unit]
envdir =
  {toxworkdir}/unit
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/unit.txt
install_command =
  pip install --no-binary buildbot {opts} {packages}
setenv =
  PYTHONPATH = {toxinidir}:{envsitepackagesdir}
whitelist_externals =
  trial
commands =
  trial --temp-directory={toxworkdir}/unit/tmp/_trial_tmp {posargs:tests/unit}

[testenv:system]
envdir =
  {toxworkdir}/system
deps =
  {[testenv]deps}
  -r{toxinidir}/requirements/system_tests.txt
passenv =
  CODECOV_IO_UPLOAD_TOKEN
  DOCKER_CERT_PATH
  DOCKER_HOST
  DOCKER_TLS_VERIFY
  GITHUB_TOKEN
  HIPCHAT_ROOM
  HIPCHAT_TOKEN
  NGROK
  OAUTH2_CLIENT_ID
  OAUTH2_CLIENT_SECRET
  OS_AUTH_URL
  OS_KEY_NAME
  OS_REGION_NAME
  OS_SSH_KEY
  OS_TENANT_NAME
  OS_USERNAME
  RAX_LOGIN
  RAX_PWD
  SECRET_OS_PASSWORD
  SENTRY_DSN
setenv =
  ARTIFACTS_PREFIX = test_artifacts_prefix-
  ARTIFACTS_URL = test_artifacts_url
  BOOTSTRAP_BUILDER_NAME = test_bootstrap
  BOOTSTRAP_SCHEDULER_NAME = test_bootstrap_scheduler
  CLOUDFILES_URL = test_cloudfiles_url
  CODECOV_IO_BASE_URL = https://codecov.io
  DB_URL = test_database
  DOCKER_API_VERSION = 1.23
  DOCKER_BUILDER_PREFIX = test_docker_builder
  DOCKER_CONTAINER_MAX_CPU = 1
  DOCKER_CONTAINER_MAX_MEMORY = 4G
  DOCKER_SCHEDULER_PREFIX = test_docker_scheduler
  EVE_GITHOST_LOGIN = test_githost_login
  EVE_GITHOST_PWD = test_githost_pwd
  EXTERNAL_URL = test_external_url
  FORCE_SCHEDULER_NAME = test_force_scheduler_name
  GIT_HOST = test_githost
  GIT_OWNER = test_owner
  GIT_POLLING = 0
  GIT_REPO = git@bitbucket.org:scality/mock.git
  GIT_SLUG = test_slug
  HTTP_PORT = 1234
  IS_PRODUCTION = 0
  LOCAL_GIT_REPO = git@bitbucket.org:scality/mock.git
  MASTER_FQDN = 172.17.0.1
  MASTER_MODE = standalone
  MAX_DOCKER_WORKERS = 2
  MAX_LOCAL_WORKERS = 2
  MAX_OPENSTACK_WORKERS = 2
  OPENSTACK_BUILDER_PREFIX = test_openstack_builder
  OPENSTACK_SCHEDULER_PREFIX = test_openstack_scheduler
  PB_PORT = 2345
  PROJECT_URL = test_project_url
  SECRET_ARTIFACT_CREDS = test_artifacts_creds
  SUFFIX = test_suffix
  TRY_PORT = 3456
  TRY_PWD = test_try_pwd
  TRY_SCHEDULER_NAME = test_try_scheduler_name
  WAMP_REALM = buildbot
  WAMP_ROUTER_URL = ws://127.0.0.1:8080/ws
  WORKDIR = {envtmpdir}
  WWW_PLAIN_LOGIN = eve
  WWW_PLAIN_PASSWORD = eve
commands =
  py.test {posargs} -svx {toxinidir}/tests/system
