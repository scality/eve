---
version: 0.2

branches:
  feature/*, improvement/*, bugfix/*, w/*, q/*:
    stage: pre-merge

stages:
  pre-merge:
    worker:
      type: docker
      path: build/workers/xenial
      volumes:
        - '/home/eve/workspace'
    steps:
      - ShellCommand:
          name: generate a big artifact
          command: >
              mkdir big
              && cd big
              && dd if=/dev/urandom of=data bs=1M count=3000
              && sha1sum data > data.sha1
          haltOnFailure: True
      - Upload:
          source: big
          alwaysRun: True
          urls:
              - data*
      - ShellCommand:
          name: download stress
          command: >
              mkdir download
              && cd download
              && wget -q -b -O data.0 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.1 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.2 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.3 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.4 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.5 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.6 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.7 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.8 "%(prop:artifacts_private_url)s/data"
              && wget -q -b -O data.9 "%(prop:artifacts_private_url)s/data"
              && wait
          haltOnFailure: True
      - ShellCommand:
          name: check downloads
          command: >
              cd download
              for i in `seq 0 9`
              do
                  cat ../big/data.sha1 | sed -e "s/data/data.$i/" >> data.sha1
              done
              && ls -l ../big/data
              && cat ../big/data.sha1
              && ls -l data*
              && cat data.sha1
              && sha1sum -c data.sha1
          haltOnFailure: True
      - ShellCommand:
          name: add successful .final_status to artifacts
          command: >
              mkdir build_status
              && echo -n "SUCCESSFUL" > build_status/.final_status
          haltOnFailure: True
      - ShellCommand:
          name: add failed .final_status to artifacts if needed
          command: >
              [ -f build_status/.final_status ]
              || ( mkdir build_status && echo -n "FAILED" > build_status/.final_status )
          haltOnFailure: True
          alwaysRun: True
      - Upload:
          source: build_status
          alwaysRun: True
