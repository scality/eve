image: python:2.7

pipelines:
  default:
    - step:
        script:
          # set-up git certificate
          - mkdir -p certs/git && cd certs/git
          - echo $GIT_ID_RSA_BASE64 | base64 --decode | tar -zxvf -
          - cd -

          # install tox
          - pip install tox

          # launch static checks
          # - tox -e static || exit 0 # FIXME: too many pylint errors

          # set-up CARINA Docker environment and variables
          - eval $(python deploy/carina_setup_env.py eve_cluster_test)

          # launch tests
          - HTTP_PORT="" PB_PORT="" REPO="" tox -e test

          # deploy eve for the eve-test repo
          - HTTP_PORT=8998 PB_PORT=9998 REPO=eve-test tox -e deploy


  branches:
    development/*:
      - step:
          script:
            # set-up git certificate
            - mkdir -p certs/git && cd certs/git
            - echo $GIT_ID_RSA_BASE64 | base64 --decode | tar -zxvf -
            - cd -

            # set-up the docker environement
            - mkdir -p certs/docker && cd certs/docker
            - echo $DOCKER_HOST1_ENV_TAR_GZ_BASE64 | base64 --decode | tar -zxvf -  && source fill_env_vars.sh
            - cd -

            # instal tox
            - pip install tox

            # deploy eve for wall-e
            - HTTP_PORT=8002 PB_PORT=9002 REPO=wall-e tox -e deploy
    release/*:
      - step:
          script:
            # set-up git certificate
            - mkdir -p certs/git && cd certs/git
            - echo $GIT_ID_RSA_BASE64 | base64 --decode | tar -zxvf -
            - cd -

            # set-up the docker environement
            - mkdir -p certs/docker && cd certs/docker
            - echo $DOCKER_HOST1_ENV_TAR_GZ_BASE64 | base64 --decode | tar -zxvf -  && source fill_env_vars.sh
            - cd -

            # instal tox
            - pip install tox

            # deploy eve for eve
            - HTTP_PORT=8001 PB_PORT=9001 REPO=eve tox -e deploy

            # deploy eve for the ring!
            - HTTP_PORT=8000 PB_PORT=9000 REPO=ring tox -e deploy


