branches:
  default:
    stage: write

stages:
  write:
    worker:
        type: docker
        path: eve/centos7-ctxt
    steps:
      - ShellCommand:
          name: create artifacts dir
          command: mkdir artifacts
      - ShellCommand:
          name: create a file in artifacts dir
          command: >
              mkdir artifacts/test
              && echo 'test/hello'   > artifacts/test/hello.txt
              && echo 'test/hello_2' > artifacts/test/hello_2.txt
              && echo 'hello'        > artifacts/hello.txt
      - SetPropertyFromCommand:
          name: set build id
          command: echo 'eve_test_build_id'
          property: build_id
      - Upload:
          source: artifacts
          urls:
           - hello.txt
           - ['files in test directory : ', 'test/*']
           - ['every hello files : ', '*hello*']
           - a_path_pattern_with_no_match
           - [a_prefix, a_path_pattern_with_no_match]
           - '*'
           - ['?ello.txt : ', '?ello.txt']
           - ['h*o.txt : ', 'h*o.txt']
           - ['test/h* : ', 'test/h*']
           - ['/h : ', '/h']
           - ['h.t : ', 'h.t']
           - ['*/.txt : ', '*/.txt']
           - ['*hello.txt : ', '*hello.txt']
           - ['hello.txt* : ', 'hello.txt*']
           - ['hello from path: \1', '*hello.txt']
      - SetProperty:
          property: "artifacts_uri"
          value: "%(prop:artifacts_url)s/test_artifacts_prefix-%(prop:build_id)s"
      - ShellCommandWithSecrets:
          name: tries to download uploaded files
          command: >
            set -ex;
            curl --fail -u %(prop:artifacts_uri)s/hello.txt;
            curl --fail -u %(prop:artifacts_uri)s/test/hello.txt;
            curl --fail -u %(prop:artifacts_uri)s/test/hello_2.txt;
