---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: "eve"
    buildnumber: "{{ buildnumber }}"
    name: "{{ name }}"
    project: "{{ namespace }}"
    service: "worker"
    {% for l in label %}
    {{ l.name }}: "{{ l.value }}"
    {% endfor %}
  name: "{{ name }}"
spec:
  activeDeadlineSeconds: {{ deadline }}
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: pool
            operator: In
            values:
            - worker
  restartPolicy: Never
  containers:
    - name: "{{ name }}"
      image: "{{ image }}"
      imagePullPolicy: IfNotPresent
      resources:
        limits:
          cpu: "{{ cpu_limit }}"
          memory: "{{ memory_limit }}"
        requests:
          cpu: "{{ cpu_request }}"
          memory: "{{ memory_request }}"
      {% if privileged or docker_hook_sidecar %}
      securityContext:
        privileged: true
      {% endif %}
      {% if docker_hook_sidecar %}
      lifecycle:
        postStart:
          exec:
            command:
              - "/bin/sh"
              - "-c"
              - >
                sudo chmod 755 /usr/local/bin/docker || chmod 755 /usr/local/bin/docker;
                sudo chmod 666 /var/run/docker.sock || chmod 666 /var/run/docker.sock;
        preStop:
          exec:
            command:
              - "curl"
              - "http://localhost:5000/quit"
      {% endif %}
      volumeMounts:
        - name: gitconfig
          readOnly: true
          mountPath: /etc/gitconfig
          subPath: gitconfig
        {% if docker_hook_sidecar %}
        - name: docker-hook
          readOnly: false
          mountPath: /usr/local/bin/docker
          subPath: docker
        - name: docker-host-data
          readOnly: false
          mountPath: /var/lib/docker
        - name: docker-host-sock
          readOnly: false
          mountPath: /var/run/docker.sock
        {% endif %}
        {% for v in volume %}
        {% if v %}
        - name: "{{ v.name }}"
          readOnly: {{ v.readonly }}
          mountPath: "{{ v.mountpath }}"
        {% endif %}
        {% endfor %}
      env:
        {% for e in env %}
        - name: "{{ e.name }}"
          value: "{{ e.value }}"
        {% endfor %}
        - name: ODR_MAX_WORKERS
          value: "128"
        {% if docker_hook_sidecar %}
        - name: DOCKER_API_VERSION
          value: "1.23"
        {% endif %}
      {% if publish %}
      ports:
        {% for p in publish %}
        - containerPort: "{{ p.value }}"
          name: "{{ p.name }}"
          protocol: "TCP"
        {% endfor %}
      {% endif %}
    {% if docker_hook_sidecar %}
    - name: docker-hook
      image: "{{ docker_hook_image }}"
      imagePullPolicy: Always
      resources:
        requests:
          cpu: 1
          memory: 2Gi
      livenessProbe:
        httpGet:
          path: /healthz
          port: 5000
        initialDelaySeconds: 120
        periodSeconds: 60
        timeoutSeconds: 30
        failureThreshold: 1
      securityContext:
        privileged: true
      volumeMounts:
        - name: creds
          readOnly: true
          mountPath: /creds
        - name: docker-host-data
          readOnly: false
          mountPath: /var/lib/docker
        - name: docker-host-sock
          readOnly: false
          mountPath: /var/run/docker.sock
      env:
        - name: BUILDNUMBER
          value: '{{ buildnumber }}'
        - name: DOCKER_API_VERSION
          value: "1.23"
        - name: NAMESPACE
          value: {{ namespace }}
        - name: REGISTRY
          value: {{ registry }}
        - name: WORKER_CPU_LIMIT
          value: '{{ cpu_limit }}'
        - name: WORKER_DEADLINE
          value: '{{ deadline }}'
        - name: WORKER_MEMORY_LIMIT
          value: '{{ memory_limit }}'
        - name: WORKER_CPU_REQUEST
          value: '{{ cpu_request }}'
        - name: WORKER_MEMORY_REQUEST
          value: '{{ memory_request }}'
    {% endif %}
  volumes:
    - name: gitconfig
      configMap:
        name: gitconfig
    {% if docker_hook_sidecar %}
    - name: creds
      secret:
        secretName: docker-hook-registry-credentials
    - name: docker-hook
      configMap:
        name: docker-hook
    - name: docker-host-data
      hostPath:
        path: /var/lib/docker
    - name: docker-host-sock
      hostPath:
        path: /var/run/docker.sock
    {% endif %}
    {% for v in volume %}
    {% if v %}
    {% if v.type == 'emptyDir' %}
    - name: "{{ v.name }}"
      emptyDir: {}
    {% else %}
    - name: "{{ v.name }}"
      hostPath:
        path: "{{ v.hostpath }}"
    {% endif %}
    {% endif %}
    {% endfor %}
